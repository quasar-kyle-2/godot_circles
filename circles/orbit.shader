shader_type canvas_item;

uniform vec2 control_size;
uniform int num_circles;
uniform vec2 center000; uniform float radius000;
uniform vec2 center001; uniform float radius001;
uniform vec2 center002; uniform float radius002;
uniform vec2 center003; uniform float radius003;
uniform vec2 center004; uniform float radius004;
uniform vec2 center005; uniform float radius005;
uniform vec2 center006; uniform float radius006;
uniform vec2 center007; uniform float radius007;
uniform vec2 center008; uniform float radius008;
uniform vec2 center009; uniform float radius009;
uniform vec2 center010; uniform float radius010;
uniform vec2 center011; uniform float radius011;
uniform vec2 center012; uniform float radius012;
uniform vec2 center013; uniform float radius013;
uniform vec2 center014; uniform float radius014;
uniform vec2 center015; uniform float radius015;
uniform vec2 center016; uniform float radius016;
uniform vec2 center017; uniform float radius017;
uniform vec2 center018; uniform float radius018;
uniform vec2 center019; uniform float radius019;
uniform vec2 center020; uniform float radius020;
uniform vec2 center021; uniform float radius021;
uniform vec2 center022; uniform float radius022;
uniform vec2 center023; uniform float radius023;
uniform vec2 center024; uniform float radius024;
uniform vec2 center025; uniform float radius025;
uniform vec2 center026; uniform float radius026;
uniform vec2 center027; uniform float radius027;
uniform vec2 center028; uniform float radius028;
uniform vec2 center029; uniform float radius029;
uniform vec2 center030; uniform float radius030;
uniform vec2 center031; uniform float radius031;
uniform vec2 center032; uniform float radius032;
uniform vec2 center033; uniform float radius033;
uniform vec2 center034; uniform float radius034;
uniform vec2 center035; uniform float radius035;
uniform vec2 center036; uniform float radius036;
uniform vec2 center037; uniform float radius037;
uniform vec2 center038; uniform float radius038;
uniform vec2 center039; uniform float radius039;
uniform vec2 center040; uniform float radius040;
uniform vec2 center041; uniform float radius041;
uniform vec2 center042; uniform float radius042;
uniform vec2 center043; uniform float radius043;
uniform vec2 center044; uniform float radius044;
uniform vec2 center045; uniform float radius045;
uniform vec2 center046; uniform float radius046;
uniform vec2 center047; uniform float radius047;
uniform vec2 center048; uniform float radius048;
uniform vec2 center049; uniform float radius049;
uniform vec2 center050; uniform float radius050;
uniform vec2 center051; uniform float radius051;
uniform vec2 center052; uniform float radius052;
uniform vec2 center053; uniform float radius053;
uniform vec2 center054; uniform float radius054;
uniform vec2 center055; uniform float radius055;
uniform vec2 center056; uniform float radius056;
uniform vec2 center057; uniform float radius057;
uniform vec2 center058; uniform float radius058;
uniform vec2 center059; uniform float radius059;
uniform vec2 center060; uniform float radius060;
uniform vec2 center061; uniform float radius061;
uniform vec2 center062; uniform float radius062;
uniform vec2 center063; uniform float radius063;
uniform vec2 center064; uniform float radius064;
uniform vec2 center065; uniform float radius065;
uniform vec2 center066; uniform float radius066;
uniform vec2 center067; uniform float radius067;
uniform vec2 center068; uniform float radius068;
uniform vec2 center069; uniform float radius069;
uniform vec2 center070; uniform float radius070;
uniform vec2 center071; uniform float radius071;
uniform vec2 center072; uniform float radius072;
uniform vec2 center073; uniform float radius073;
uniform vec2 center074; uniform float radius074;
uniform vec2 center075; uniform float radius075;
uniform vec2 center076; uniform float radius076;
uniform vec2 center077; uniform float radius077;
uniform vec2 center078; uniform float radius078;
uniform vec2 center079; uniform float radius079;
uniform vec2 center080; uniform float radius080;
uniform vec2 center081; uniform float radius081;
uniform vec2 center082; uniform float radius082;
uniform vec2 center083; uniform float radius083;
uniform vec2 center084; uniform float radius084;
uniform vec2 center085; uniform float radius085;
uniform vec2 center086; uniform float radius086;
uniform vec2 center087; uniform float radius087;
uniform vec2 center088; uniform float radius088;
uniform vec2 center089; uniform float radius089;
uniform vec2 center090; uniform float radius090;
uniform vec2 center091; uniform float radius091;
uniform vec2 center092; uniform float radius092;
uniform vec2 center093; uniform float radius093;
uniform vec2 center094; uniform float radius094;
uniform vec2 center095; uniform float radius095;
uniform vec2 center096; uniform float radius096;
uniform vec2 center097; uniform float radius097;
uniform vec2 center098; uniform float radius098;
uniform vec2 center099; uniform float radius099;
uniform vec2 center100; uniform float radius100;
uniform vec2 center101; uniform float radius101;
uniform vec2 center102; uniform float radius102;
uniform vec2 center103; uniform float radius103;
uniform vec2 center104; uniform float radius104;
uniform vec2 center105; uniform float radius105;
uniform vec2 center106; uniform float radius106;
uniform vec2 center107; uniform float radius107;
uniform vec2 center108; uniform float radius108;
uniform vec2 center109; uniform float radius109;
uniform vec2 center110; uniform float radius110;
uniform vec2 center111; uniform float radius111;
uniform vec2 center112; uniform float radius112;
uniform vec2 center113; uniform float radius113;
uniform vec2 center114; uniform float radius114;
uniform vec2 center115; uniform float radius115;
uniform vec2 center116; uniform float radius116;
uniform vec2 center117; uniform float radius117;
uniform vec2 center118; uniform float radius118;
uniform vec2 center119; uniform float radius119;
uniform vec2 center120; uniform float radius120;
uniform vec2 center121; uniform float radius121;
uniform vec2 center122; uniform float radius122;
uniform vec2 center123; uniform float radius123;
uniform vec2 center124; uniform float radius124;
uniform vec2 center125; uniform float radius125;
uniform vec2 center126; uniform float radius126;
uniform vec2 center127; uniform float radius127;
uniform vec2 center128; uniform float radius128;
uniform vec2 center129; uniform float radius129;
uniform vec2 center130; uniform float radius130;
uniform vec2 center131; uniform float radius131;
uniform vec2 center132; uniform float radius132;
uniform vec2 center133; uniform float radius133;
uniform vec2 center134; uniform float radius134;
uniform vec2 center135; uniform float radius135;
uniform vec2 center136; uniform float radius136;
uniform vec2 center137; uniform float radius137;
uniform vec2 center138; uniform float radius138;
uniform vec2 center139; uniform float radius139;
uniform vec2 center140; uniform float radius140;
uniform vec2 center141; uniform float radius141;
uniform vec2 center142; uniform float radius142;
uniform vec2 center143; uniform float radius143;
uniform vec2 center144; uniform float radius144;
uniform vec2 center145; uniform float radius145;
uniform vec2 center146; uniform float radius146;
uniform vec2 center147; uniform float radius147;
uniform vec2 center148; uniform float radius148;
uniform vec2 center149; uniform float radius149;
uniform vec2 center150; uniform float radius150;
uniform vec2 center151; uniform float radius151;
uniform vec2 center152; uniform float radius152;
uniform vec2 center153; uniform float radius153;
uniform vec2 center154; uniform float radius154;
uniform vec2 center155; uniform float radius155;
uniform vec2 center156; uniform float radius156;
uniform vec2 center157; uniform float radius157;
uniform vec2 center158; uniform float radius158;
uniform vec2 center159; uniform float radius159;
uniform vec2 center160; uniform float radius160;
uniform vec2 center161; uniform float radius161;
uniform vec2 center162; uniform float radius162;
uniform vec2 center163; uniform float radius163;
uniform vec2 center164; uniform float radius164;
uniform vec2 center165; uniform float radius165;
uniform vec2 center166; uniform float radius166;
uniform vec2 center167; uniform float radius167;
uniform vec2 center168; uniform float radius168;
uniform vec2 center169; uniform float radius169;
uniform vec2 center170; uniform float radius170;
uniform vec2 center171; uniform float radius171;
uniform vec2 center172; uniform float radius172;
uniform vec2 center173; uniform float radius173;
uniform vec2 center174; uniform float radius174;
uniform vec2 center175; uniform float radius175;
uniform vec2 center176; uniform float radius176;
uniform vec2 center177; uniform float radius177;
uniform vec2 center178; uniform float radius178;
uniform vec2 center179; uniform float radius179;
uniform vec2 center180; uniform float radius180;
uniform vec2 center181; uniform float radius181;
uniform vec2 center182; uniform float radius182;
uniform vec2 center183; uniform float radius183;
uniform vec2 center184; uniform float radius184;
uniform vec2 center185; uniform float radius185;
uniform vec2 center186; uniform float radius186;
uniform vec2 center187; uniform float radius187;
uniform vec2 center188; uniform float radius188;
uniform vec2 center189; uniform float radius189;
uniform vec2 center190; uniform float radius190;
uniform vec2 center191; uniform float radius191;
uniform vec2 center192; uniform float radius192;
uniform vec2 center193; uniform float radius193;
uniform vec2 center194; uniform float radius194;
uniform vec2 center195; uniform float radius195;
uniform vec2 center196; uniform float radius196;
uniform vec2 center197; uniform float radius197;
uniform vec2 center198; uniform float radius198;
uniform vec2 center199; uniform float radius199;
uniform vec2 center200; uniform float radius200;
uniform vec2 center201; uniform float radius201;
uniform vec2 center202; uniform float radius202;
uniform vec2 center203; uniform float radius203;
uniform vec2 center204; uniform float radius204;
uniform vec2 center205; uniform float radius205;
uniform vec2 center206; uniform float radius206;
uniform vec2 center207; uniform float radius207;
uniform vec2 center208; uniform float radius208;
uniform vec2 center209; uniform float radius209;
uniform vec2 center210; uniform float radius210;
uniform vec2 center211; uniform float radius211;
uniform vec2 center212; uniform float radius212;
uniform vec2 center213; uniform float radius213;
uniform vec2 center214; uniform float radius214;
uniform vec2 center215; uniform float radius215;
uniform vec2 center216; uniform float radius216;
uniform vec2 center217; uniform float radius217;
uniform vec2 center218; uniform float radius218;
uniform vec2 center219; uniform float radius219;
uniform vec2 center220; uniform float radius220;
uniform vec2 center221; uniform float radius221;
uniform vec2 center222; uniform float radius222;
uniform vec2 center223; uniform float radius223;
uniform vec2 center224; uniform float radius224;
uniform vec2 center225; uniform float radius225;
uniform vec2 center226; uniform float radius226;
uniform vec2 center227; uniform float radius227;
uniform vec2 center228; uniform float radius228;
uniform vec2 center229; uniform float radius229;
uniform vec2 center230; uniform float radius230;
uniform vec2 center231; uniform float radius231;
uniform vec2 center232; uniform float radius232;
uniform vec2 center233; uniform float radius233;
uniform vec2 center234; uniform float radius234;
uniform vec2 center235; uniform float radius235;
uniform vec2 center236; uniform float radius236;
uniform vec2 center237; uniform float radius237;
uniform vec2 center238; uniform float radius238;
uniform vec2 center239; uniform float radius239;
uniform vec2 center240; uniform float radius240;
uniform vec2 center241; uniform float radius241;
uniform vec2 center242; uniform float radius242;
uniform vec2 center243; uniform float radius243;
uniform vec2 center244; uniform float radius244;
uniform vec2 center245; uniform float radius245;
uniform vec2 center246; uniform float radius246;
uniform vec2 center247; uniform float radius247;
uniform vec2 center248; uniform float radius248;
uniform vec2 center249; uniform float radius249;
uniform vec2 center250; uniform float radius250;
uniform vec2 center251; uniform float radius251;
uniform vec2 center252; uniform float radius252;
uniform vec2 center253; uniform float radius253;
uniform vec2 center254; uniform float radius254;
uniform vec2 center255; uniform float radius255;


void fragment() {
	vec2 pixel_coordinate = UV * control_size;
	float a = 0.0;
    if (num_circles > 0) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center000) - radius000));
    if (num_circles > 1) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center001) - radius001));
    if (num_circles > 2) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center002) - radius002));
    if (num_circles > 3) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center003) - radius003));
    if (num_circles > 4) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center004) - radius004));
    if (num_circles > 5) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center005) - radius005));
    if (num_circles > 6) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center006) - radius006));
    if (num_circles > 7) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center007) - radius007));
    if (num_circles > 8) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center008) - radius008));
    if (num_circles > 9) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center009) - radius009));
    if (num_circles > 10) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center010) - radius010));
    if (num_circles > 11) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center011) - radius011));
    if (num_circles > 12) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center012) - radius012));
    if (num_circles > 13) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center013) - radius013));
    if (num_circles > 14) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center014) - radius014));
    if (num_circles > 15) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center015) - radius015));
    if (num_circles > 16) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center016) - radius016));
    if (num_circles > 17) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center017) - radius017));
    if (num_circles > 18) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center018) - radius018));
    if (num_circles > 19) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center019) - radius019));
    if (num_circles > 20) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center020) - radius020));
    if (num_circles > 21) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center021) - radius021));
    if (num_circles > 22) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center022) - radius022));
    if (num_circles > 23) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center023) - radius023));
    if (num_circles > 24) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center024) - radius024));
    if (num_circles > 25) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center025) - radius025));
    if (num_circles > 26) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center026) - radius026));
    if (num_circles > 27) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center027) - radius027));
    if (num_circles > 28) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center028) - radius028));
    if (num_circles > 29) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center029) - radius029));
    if (num_circles > 30) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center030) - radius030));
    if (num_circles > 31) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center031) - radius031));
    if (num_circles > 32) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center032) - radius032));
    if (num_circles > 33) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center033) - radius033));
    if (num_circles > 34) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center034) - radius034));
    if (num_circles > 35) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center035) - radius035));
    if (num_circles > 36) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center036) - radius036));
    if (num_circles > 37) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center037) - radius037));
    if (num_circles > 38) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center038) - radius038));
    if (num_circles > 39) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center039) - radius039));
    if (num_circles > 40) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center040) - radius040));
    if (num_circles > 41) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center041) - radius041));
    if (num_circles > 42) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center042) - radius042));
    if (num_circles > 43) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center043) - radius043));
    if (num_circles > 44) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center044) - radius044));
    if (num_circles > 45) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center045) - radius045));
    if (num_circles > 46) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center046) - radius046));
    if (num_circles > 47) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center047) - radius047));
    if (num_circles > 48) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center048) - radius048));
    if (num_circles > 49) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center049) - radius049));
    if (num_circles > 50) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center050) - radius050));
    if (num_circles > 51) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center051) - radius051));
    if (num_circles > 52) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center052) - radius052));
    if (num_circles > 53) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center053) - radius053));
    if (num_circles > 54) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center054) - radius054));
    if (num_circles > 55) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center055) - radius055));
    if (num_circles > 56) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center056) - radius056));
    if (num_circles > 57) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center057) - radius057));
    if (num_circles > 58) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center058) - radius058));
    if (num_circles > 59) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center059) - radius059));
    if (num_circles > 60) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center060) - radius060));
    if (num_circles > 61) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center061) - radius061));
    if (num_circles > 62) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center062) - radius062));
    if (num_circles > 63) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center063) - radius063));
    if (num_circles > 64) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center064) - radius064));
    if (num_circles > 65) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center065) - radius065));
    if (num_circles > 66) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center066) - radius066));
    if (num_circles > 67) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center067) - radius067));
    if (num_circles > 68) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center068) - radius068));
    if (num_circles > 69) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center069) - radius069));
    if (num_circles > 70) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center070) - radius070));
    if (num_circles > 71) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center071) - radius071));
    if (num_circles > 72) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center072) - radius072));
    if (num_circles > 73) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center073) - radius073));
    if (num_circles > 74) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center074) - radius074));
    if (num_circles > 75) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center075) - radius075));
    if (num_circles > 76) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center076) - radius076));
    if (num_circles > 77) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center077) - radius077));
    if (num_circles > 78) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center078) - radius078));
    if (num_circles > 79) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center079) - radius079));
    if (num_circles > 80) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center080) - radius080));
    if (num_circles > 81) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center081) - radius081));
    if (num_circles > 82) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center082) - radius082));
    if (num_circles > 83) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center083) - radius083));
    if (num_circles > 84) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center084) - radius084));
    if (num_circles > 85) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center085) - radius085));
    if (num_circles > 86) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center086) - radius086));
    if (num_circles > 87) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center087) - radius087));
    if (num_circles > 88) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center088) - radius088));
    if (num_circles > 89) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center089) - radius089));
    if (num_circles > 90) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center090) - radius090));
    if (num_circles > 91) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center091) - radius091));
    if (num_circles > 92) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center092) - radius092));
    if (num_circles > 93) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center093) - radius093));
    if (num_circles > 94) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center094) - radius094));
    if (num_circles > 95) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center095) - radius095));
    if (num_circles > 96) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center096) - radius096));
    if (num_circles > 97) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center097) - radius097));
    if (num_circles > 98) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center098) - radius098));
    if (num_circles > 99) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center099) - radius099));
    if (num_circles > 100) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center100) - radius100));
    if (num_circles > 101) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center101) - radius101));
    if (num_circles > 102) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center102) - radius102));
    if (num_circles > 103) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center103) - radius103));
    if (num_circles > 104) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center104) - radius104));
    if (num_circles > 105) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center105) - radius105));
    if (num_circles > 106) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center106) - radius106));
    if (num_circles > 107) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center107) - radius107));
    if (num_circles > 108) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center108) - radius108));
    if (num_circles > 109) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center109) - radius109));
    if (num_circles > 110) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center110) - radius110));
    if (num_circles > 111) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center111) - radius111));
    if (num_circles > 112) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center112) - radius112));
    if (num_circles > 113) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center113) - radius113));
    if (num_circles > 114) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center114) - radius114));
    if (num_circles > 115) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center115) - radius115));
    if (num_circles > 116) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center116) - radius116));
    if (num_circles > 117) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center117) - radius117));
    if (num_circles > 118) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center118) - radius118));
    if (num_circles > 119) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center119) - radius119));
    if (num_circles > 120) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center120) - radius120));
    if (num_circles > 121) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center121) - radius121));
    if (num_circles > 122) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center122) - radius122));
    if (num_circles > 123) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center123) - radius123));
    if (num_circles > 124) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center124) - radius124));
    if (num_circles > 125) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center125) - radius125));
    if (num_circles > 126) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center126) - radius126));
    if (num_circles > 127) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center127) - radius127));
    if (num_circles > 128) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center128) - radius128));
    if (num_circles > 129) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center129) - radius129));
    if (num_circles > 130) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center130) - radius130));
    if (num_circles > 131) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center131) - radius131));
    if (num_circles > 132) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center132) - radius132));
    if (num_circles > 133) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center133) - radius133));
    if (num_circles > 134) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center134) - radius134));
    if (num_circles > 135) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center135) - radius135));
    if (num_circles > 136) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center136) - radius136));
    if (num_circles > 137) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center137) - radius137));
    if (num_circles > 138) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center138) - radius138));
    if (num_circles > 139) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center139) - radius139));
    if (num_circles > 140) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center140) - radius140));
    if (num_circles > 141) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center141) - radius141));
    if (num_circles > 142) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center142) - radius142));
    if (num_circles > 143) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center143) - radius143));
    if (num_circles > 144) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center144) - radius144));
    if (num_circles > 145) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center145) - radius145));
    if (num_circles > 146) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center146) - radius146));
    if (num_circles > 147) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center147) - radius147));
    if (num_circles > 148) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center148) - radius148));
    if (num_circles > 149) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center149) - radius149));
    if (num_circles > 150) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center150) - radius150));
    if (num_circles > 151) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center151) - radius151));
    if (num_circles > 152) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center152) - radius152));
    if (num_circles > 153) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center153) - radius153));
    if (num_circles > 154) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center154) - radius154));
    if (num_circles > 155) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center155) - radius155));
    if (num_circles > 156) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center156) - radius156));
    if (num_circles > 157) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center157) - radius157));
    if (num_circles > 158) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center158) - radius158));
    if (num_circles > 159) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center159) - radius159));
    if (num_circles > 160) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center160) - radius160));
    if (num_circles > 161) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center161) - radius161));
    if (num_circles > 162) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center162) - radius162));
    if (num_circles > 163) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center163) - radius163));
    if (num_circles > 164) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center164) - radius164));
    if (num_circles > 165) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center165) - radius165));
    if (num_circles > 166) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center166) - radius166));
    if (num_circles > 167) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center167) - radius167));
    if (num_circles > 168) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center168) - radius168));
    if (num_circles > 169) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center169) - radius169));
    if (num_circles > 170) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center170) - radius170));
    if (num_circles > 171) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center171) - radius171));
    if (num_circles > 172) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center172) - radius172));
    if (num_circles > 173) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center173) - radius173));
    if (num_circles > 174) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center174) - radius174));
    if (num_circles > 175) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center175) - radius175));
    if (num_circles > 176) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center176) - radius176));
    if (num_circles > 177) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center177) - radius177));
    if (num_circles > 178) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center178) - radius178));
    if (num_circles > 179) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center179) - radius179));
    if (num_circles > 180) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center180) - radius180));
    if (num_circles > 181) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center181) - radius181));
    if (num_circles > 182) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center182) - radius182));
    if (num_circles > 183) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center183) - radius183));
    if (num_circles > 184) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center184) - radius184));
    if (num_circles > 185) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center185) - radius185));
    if (num_circles > 186) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center186) - radius186));
    if (num_circles > 187) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center187) - radius187));
    if (num_circles > 188) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center188) - radius188));
    if (num_circles > 189) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center189) - radius189));
    if (num_circles > 190) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center190) - radius190));
    if (num_circles > 191) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center191) - radius191));
    if (num_circles > 192) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center192) - radius192));
    if (num_circles > 193) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center193) - radius193));
    if (num_circles > 194) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center194) - radius194));
    if (num_circles > 195) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center195) - radius195));
    if (num_circles > 196) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center196) - radius196));
    if (num_circles > 197) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center197) - radius197));
    if (num_circles > 198) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center198) - radius198));
    if (num_circles > 199) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center199) - radius199));
    if (num_circles > 200) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center200) - radius200));
    if (num_circles > 201) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center201) - radius201));
    if (num_circles > 202) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center202) - radius202));
    if (num_circles > 203) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center203) - radius203));
    if (num_circles > 204) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center204) - radius204));
    if (num_circles > 205) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center205) - radius205));
    if (num_circles > 206) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center206) - radius206));
    if (num_circles > 207) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center207) - radius207));
    if (num_circles > 208) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center208) - radius208));
    if (num_circles > 209) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center209) - radius209));
    if (num_circles > 210) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center210) - radius210));
    if (num_circles > 211) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center211) - radius211));
    if (num_circles > 212) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center212) - radius212));
    if (num_circles > 213) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center213) - radius213));
    if (num_circles > 214) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center214) - radius214));
    if (num_circles > 215) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center215) - radius215));
    if (num_circles > 216) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center216) - radius216));
    if (num_circles > 217) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center217) - radius217));
    if (num_circles > 218) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center218) - radius218));
    if (num_circles > 219) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center219) - radius219));
    if (num_circles > 220) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center220) - radius220));
    if (num_circles > 221) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center221) - radius221));
    if (num_circles > 222) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center222) - radius222));
    if (num_circles > 223) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center223) - radius223));
    if (num_circles > 224) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center224) - radius224));
    if (num_circles > 225) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center225) - radius225));
    if (num_circles > 226) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center226) - radius226));
    if (num_circles > 227) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center227) - radius227));
    if (num_circles > 228) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center228) - radius228));
    if (num_circles > 229) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center229) - radius229));
    if (num_circles > 230) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center230) - radius230));
    if (num_circles > 231) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center231) - radius231));
    if (num_circles > 232) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center232) - radius232));
    if (num_circles > 233) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center233) - radius233));
    if (num_circles > 234) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center234) - radius234));
    if (num_circles > 235) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center235) - radius235));
    if (num_circles > 236) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center236) - radius236));
    if (num_circles > 237) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center237) - radius237));
    if (num_circles > 238) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center238) - radius238));
    if (num_circles > 239) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center239) - radius239));
    if (num_circles > 240) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center240) - radius240));
    if (num_circles > 241) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center241) - radius241));
    if (num_circles > 242) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center242) - radius242));
    if (num_circles > 243) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center243) - radius243));
    if (num_circles > 244) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center244) - radius244));
    if (num_circles > 245) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center245) - radius245));
    if (num_circles > 246) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center246) - radius246));
    if (num_circles > 247) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center247) - radius247));
    if (num_circles > 248) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center248) - radius248));
    if (num_circles > 249) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center249) - radius249));
    if (num_circles > 250) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center250) - radius250));
    if (num_circles > 251) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center251) - radius251));
    if (num_circles > 252) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center252) - radius252));
    if (num_circles > 253) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center253) - radius253));
    if (num_circles > 254) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center254) - radius254));
    if (num_circles > 255) a = max(a, 1.498 - 2.0 * abs(distance(pixel_coordinate, center255) - radius255));
	if (a > 0.0) COLOR.rga = vec3(1, 1, a);
}
